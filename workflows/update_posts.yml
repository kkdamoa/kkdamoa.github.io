name: Update Posts JSON

on:
  push:
    branches:
      - main  # main 브랜치에 변경이 생길 때 실행

permissions:
  contents: write  # push 권한 설정

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Attempt to build site
        id: jekyll_build
        continue-on-error: true  # 오류가 발생해도 계속 진행
        run: |
          jekyll build 2>&1 | tee build_log.txt || true
          
      - name: Identify problematic files
        if: failure()  # 빌드에 실패한 경우에만 실행
        run: |
          # 오류가 발생한 파일 이름을 추출하여 problematic_files.txt에 저장
          grep -oP '_posts/[^ ]+\.md' build_log.txt | sort -u > problematic_files.txt

      - name: Generate posts.json
        run: |
          echo "[" > posts.json
          for file in $(ls _posts); do
            # 문제가 발생한 파일인지 확인하고 제외
            if [ ! -f problematic_files.txt ] || ! grep -q "/_posts/$file" problematic_files.txt; then
              echo "\"/_posts/$file\"," >> posts.json
            fi
          done
          sed -i '$ s/,$//' posts.json  # 마지막 쉼표 제거
          echo "]" >> posts.json

      - name: Commit posts.json
        continue-on-error: true  # 오류가 발생해도 계속 진행
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add posts.json
          git commit -m "Update posts.json" || true
          git push || true
